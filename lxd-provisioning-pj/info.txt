kubectl patch node slave-node-1 -p '{"spec":{"podCIDR":"10.244.0.0/16"}}'

/etc/systemd/system/kubelet.service.d# 
10-kubeadm.conf

lxc launch ubuntu:22.04 --vm kmaster --profile k8svm
lxc launch ubuntu:22.04 --vm kworker1 --profile k8svm
lxc launch ubuntu:22.04 --vm kworker2 --profile k8svm

alias k='kubectl -n=kube-system'

lxc config device add kworker2 myport32323 proxy listen=tcp:0.0.0.0:32323 connect=tcp:127.0.0.1:32323
lxc config device add mycontainer myport443 proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443

systemctl status kubelet
journalctl -xeu kubelet

kubectl -n kube-system logs kube-apiserver-kmaster
kubectl -n kube-system get all -o wide

/run/containerd/containerd.sock


$ kubectl edit cm/kube-proxy -n kube-system
## Change from
    metricsBindAddress: 127.0.0.1:10249 ### <--- Too secure
## Change to
    metricsBindAddress: 0.0.0.0:10249
$ kubectl delete pod -l k8s-app=kube-proxy -n kube-system

$ kubectl get svc -A | grep kubernetes
default  kubernetes  ClusterIP  10.43.0.1  <none>  443/TCP  493d
Edit /etc/systemd/system/k3s.service and add the service IP to TLS-SAN.
..
ExecStart=/usr/local/bin/k3s \
                server \
                --disable traefik \
                --disable local-storage \
                --disable coredns \
                --cluster-init \
                --tls-san 10.43.0.1 \

                =================================

config file location folder: /etc/systemd/system/kubelet.service.d

Error:
Couldn't get configMap kube-flannel/kube-root-ca.crt: configmap "kube-root-ca.crt" not found
Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized


I just add a config line in "/etc/kubernetes/manifests/kube-apiserver.yaml":

--endpoint-reconciler-type=none
the problem disappeared.

Small probability is caused by ipv6
try this

cat > /etc/sysctl.d/k8s-ipv6.conf <<EOF
net.ipv6.conf.all.disable_ipv6 = 0
net.ipv6.conf.default.disable_ipv6 = 0
EOF
sysctl --system
If not works, could try this:

cat > /etc/sysctl.d/k8s-ipv6.conf <EOF
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
EOF
sysctl --system

===========

"http://127.0.0.1:2381"} -> etcd

127.0.0.1:2379:

kube-scheduler -> depends on kube-controller-manager-kmaster -> depends on apiserver


sysctl --system && systemctl daemon-reload && systemctl restart containerd && systemctl restart kubelet


toml set --toml-path config.toml plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options.SystemdCgroup false

toml set --toml-path cgroup.path "XX"
